#!usr/bin/python2
# coding=utf-8 

import os, sys, time, datetime, random
from time import sleep

try:
    import mechanize
except ImportError:
    os.system("pip2 install mechanize")

try:
    import youtube_dl
except ImportError:
    os.system("pip2 install youtube_dl")

try:
    import requests
except ImportError:
    os.system("pip2 install requests")
from requests.exceptions import ConnectionError
from mechanize import Browser

# -Parametre-#########
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/36.2.2254/119.132; U; id) Presto/2.12.423 Version/12.16')]

def McTony():
    mr = [  '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*', '      ', '*Faxel*', '      ', '*Faxel*', '      ', '*McTony*\n']
    for o in mr:
        print '\r\x1b[1;97m[\x1b[1;32m●●\x1b[1;97m]   [38;5;221m ' + o,
        sys.stdout.flush()
        time.sleep(0.15)

logo = ("""\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●     \n\033[38;5;214m•_  _ ____ \033[1;97m _  _ ____ ____ _  _\033[1;32m ____ ____   _  _• \n\033[38;5;214m•|\/| |__/ \033[1;97m |__| |__| |    |_/ \033[1;32m |___ |__/   |_/ • \n\033[38;5;214m•|  | |  \ \033[1;97m |  | |  | |___ | \_\033[1;32m |___ |  \ __| \_• \n\033[38;5;214m●▬▬▬▬▬▬▬▬๑\033[1;97m●▬▬▬▬▬▬๑۩۩๑▬▬▬▬▬▬●●▬▬▬▬▬\033[1;32m▬▬▬▬๑۩۩๑▬▬▬▬▬▬●\n\033[1;97m╔═════════════════════════════════════════════╗\n\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║\n\033[1;97m╚═════════════════════════════════════════════╝
""")
logo1 = ("""
\033[38;5;215m█ █▄░█ █▀▀ █▀█ █▀█ █▀▄▀█ ▄▀█ ▀█▀ █ █▀█ █▄░█
\033[38;5;215m█ █░▀█ █▀░ █▄█ █▀▄ █░▀░█ █▀█ ░█░ █ █▄█ █░▀█↻★
\t\033[1;97m╔═════════════════════════════════════════════╗
\t\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║
\t\033[1;97m╚═════════════════════════════════════════════╝
\033[1;92mExemple \033[1;91m: \033[1;97mhttps://youtu.be/5lTZrwHnpWc
""")
logo2 = ("""
\033[38;5;217m█░█ █ █▀▄ █▀▀ █▀█ █▀
\033[38;5;217m▀▄▀ █ █▄▀ ██▄ █▄█ ▄█↻★
\t\033[1;97m╔═════════════════════════════════════════════╗
\t\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║
\t\033[1;97m╚═════════════════════════════════════════════╝
\033[1;92mExemple \033[1;91m: \033[1;97mhttps://youtu.be/gyc_rOe8DcE
""")
logo3 = ("""
\033[38;5;210m▄▀█ █░█ █▀▄ █ █▀█ █▀
\033[38;5;210m█▀█ █▄█ █▄▀ █ █▄█ ▄█↻★
\t\033[1;97m╔═════════════════════════════════════════════╗
\t\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║
\t\033[1;97m╚═════════════════════════════════════════════╝
\033[1;92mExemple \033[1;91m: \033[1;97mhttps://youtu.be/kGxxbiDQhHs
""")
logo4 = ("""
\033[38;5;223m█▀█ █░░ ▄▀█ █▄█ █░░ █ █▀ ▀█▀ █▀▀\033[1;95m▄▄\033[38;5;227m█░█ █▀█ █░░
\033[38;5;223m█▀▀ █▄▄ █▀█ ░█░ █▄▄ █ ▄█ ░█░ ██▄\033[1;96m░░\033[38;5;227m█▄█ █▀▄ █▄▄↻★
\t\033[1;97m╔═════════════════════════════════════════════╗
\t\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║
\t\033[1;97m╚═════════════════════════════════════════════╝
\033[1;92mExemple \033[1;91m: \033[1;97mhttps://youtu.be/5lTZrwHnpWc
""")

logo5 =("""
╭━━━━━╮              ╭━━━━━╮                                  
┃ ●  ══  ┃              ┃ ● ══    ┃                                   
┃████████┃              ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃████████┃    ══        ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃████████┃              ┃████████┃                                  
┃    ○   ┃              ┃    ○    ┃                                    
╰━━━━━╯              ╰━━━━━╯

\t\033[1;97m╔═════════════════════════════════════════════╗
\t\033[1;97m║\033[1;91m[\033[1;93m**\033[1;91m]\033[38;5;95m      Developpeur \033[1;97m:\033[38;5;214m  Faxel           \033[1;91m[\033[1;93m**\033[1;91m]\033[1;97m║
\t\033[1;97m╚═════════════════════════════════════════════╝
      """)
# -Automatisation-#

def Street(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.009)

#-Effacer l\'environnemeent et place au chargement
os.system("clear")
#-Animation
McTony()

#--Menu 
def menu():
  
  os.system('clear')
  print(logo)
  print("\033[1;97m╔════════════════════════════╗     ")
  Street("\033[1;97m║\033[1;96m        YOUTUBE VIDEO       \033[1;97m║")
  print("\033[1;97m║\033[1;96m                           \033[1;97m ║")
  print("\033[1;97m║\033[1;93m1.\033[1;95m Information sur une video\033[1;97m║")
  print("\033[1;97m║\033[1;93m2.\033[1;92m Telecharger une Video    \033[1;97m║")
  print("\033[1;97m║\033[1;93m3.\033[1;94m Telecharger une musique  \033[1;97m║")
  print("\033[1;97m║\033[1;93m4.\033[1;94m Telecharger la playliste \033[1;97m║")
  print("\033[1;97m║\033[1;93mQ.\033[1;91m Quitter                  \033[1;97m║")
  print("\033[1;97m╚════════════════════════════╝     ")
  print("\033[1;97m║")
  choisir()

# -Place au choix
def choisir():    
  Choix = raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")
  if Choix == "1" or Choix == "01":
    os.system("clear")
    McTony()
    os.system("clear")
    informations()  
    menu()
  elif Choix == "2" or Choix == "02":
    os.system("clear")
    McTony()
    os.system("clear")    
    videos()    
    raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")
    menu()
  elif Choix == "3" or Choix == "03":
    os.system("clear")
    McTony()
    os.system("clear")    
    audios()    
    raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")
    menu()
  elif Choix == "4" or Choix == "04":
    os.system("clear")
    McTony()
    os.system("clear")    
    playliste()    
    raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")
    menu()
  elif Choix == "q" or Choix == "Q":
    exit()
  else:
    print("\n\033[1;91mRemplissez correctement")    
    menu()  
    
def videos():
  print(logo2)
  lien = raw_input("\x1b[1;97m Lien\x1b[1;91m : \x1b[1;95m ")
  #nom_fichier = raw_input("\n\033[1;97m Enregistrer sous le nom de \033[1;91m(\033[1;97mex\033[1;91m :\033[1;96m faxel\033[1;91m) : \033[1;93m ")
  Mael_faxel = {}
  with youtube_dl.YoutubeDL(Mael_faxel) as ydl:
   ydl.download([lien])
  print("\n\033[1;92mTerminer")
  Street ("\n\033[1;91m[\033[1;93m**\033[1;91m] \033[38;5;214mFaxel\033[1;97m un jour, \033[38;5;214mFaxel \033[1;97mtoujours    \033[1;91m[\033[1;93m**\033[1;91m]")
  raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")

def audios():
  print(logo3)
  Street("\033[1;93m Lien de la chaine pour obtenir les informations.\n")
  audio = raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")
  Mael_faxel = {
                  'format': 'bestaudio/best',
                  'postprocessors': [{
                      'key': 'FFmpegExtractAudio',
                      'preferredcodec': 'mp3',
                      'preferredquality': '192',
                  }],
              }
  with youtube_dl.YoutubeDL(Mael_faxel) as ydl:
      ydl.download([audio])
  os.system('ls')
  print("\n\033[1;95m Patientez")
  print("\n\033[1;92mTerminer")
  Street ("\n\033[1;91m[\033[1;93m**\033[1;91m] \033[38;5;214mFaxel\033[1;97m un jour, \033[38;5;214mFaxel \033[1;97mtoujours    \033[1;91m[\033[1;93m**\033[1;91m]")
  raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")

def informations():
 print(logo1)
 Street("\033[1;97mAvez vous un lien pour voir les informations sinon taper n pour voir les informations du lien par defaut.\n")
 dmd = raw_input("\033[1;97m ╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")
 if dmd =="o" or dmd =="O":
  Street("\033[1;93m Lien de la chaine pour obtenir les informations.\n")
  url = raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")
  print("\033[1;97m")
  Mael_faxel = {}
  with youtube_dl.YoutubeDL(Mael_faxel) as ydl:
    meta = ydl.extract_info(url, download=False) 
  print ('\033[38;5;245mDate Mise a jour  \033[1;91m:\033[1;97m %s' %(meta['upload_date']))
  print ('\033[38;5;245mTelechargement    \033[1;91m:\033[1;92m %s' %(meta['uploader']))
  print ('\033[38;5;245mVues              \033[1;91m:\033[1;95m %d' %(meta['view_count']))
  print ('\033[38;5;245mJ\'aime            \033[1;91m:\033[1;96m %d' %(meta['like_count']))
  print ('\033[38;5;245mJ\'aime Pas        \033[1;91m:\033[1;93m %d' %(meta['dislike_count']))
  print ('\033[38;5;245mId                \033[1;91m:\033[38;5;223m %s' %(meta['id']))
  print ('\033[38;5;245mFormat            \033[1;91m:\033[38;5;210m %s' %(meta['format']))
  print ('\033[38;5;245mDurée             \033[1;91m:\033[38;5;217m %s' %(meta['duration']))
  print ('\033[38;5;245mTitre             \033[1;91m:\033[38;5;227m %s' %(meta['title']))
  print ('\033[38;5;245mDescription       \033[1;91m:\033[38;5;215m %s' %(meta['description']))
  Street ("\n\033[1;91m[\033[1;93m**\033[1;91m] \033[38;5;214mFaxel\033[1;97m un jour, \033[38;5;214mFaxel \033[1;97mtoujours    \033[1;91m[\033[1;93m**\033[1;91m]")
  raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")
    
 if dmd =="n" or dmd =="n":
  par_defaut = "https://youtu.be/gyc_rOe8DcE"
  print("\033[1;97m")
  Mael_faxel = {}
  with youtube_dl.YoutubeDL(Mael_faxel) as ydl:
    meta = ydl.extract_info(par_defaut, download=False) 
  print ('\033[38;5;245mDate Mise a jour  \033[1;91m:\033[1;97m %s' %(meta['upload_date']))
  print ('\033[38;5;245mTelechargement    \033[1;91m:\033[1;92m %s' %(meta['uploader']))
  print ('\033[38;5;245mVues              \033[1;91m:\033[1;95m %d' %(meta['view_count']))
  print ('\033[38;5;245mJ\'aime            \033[1;91m:\033[1;96m %d' %(meta['like_count']))
  print ('\033[38;5;245mJ\'aime Pas        \033[1;91m:\033[1;93m %d' %(meta['dislike_count']))
  print ('\033[38;5;245mId                \033[1;91m:\033[38;5;223m %s' %(meta['id']))
  print ('\033[38;5;245mFormat            \033[1;91m:\033[38;5;210m %s' %(meta['format']))
  print ('\033[38;5;245mDurée             \033[1;91m:\033[38;5;217m %s' %(meta['duration']))
  print ('\033[38;5;245mTitre             \033[1;91m:\033[38;5;227m %s' %(meta['title']))
  print ('\033[38;5;245mDescription       \033[1;91m:\033[38;5;215m %s' %(meta['description']))
  Street ("\n\033[1;91m[\033[1;93m**\033[1;91m] \033[38;5;214mFaxel\033[1;97m un jour, \033[38;5;214mFaxel \033[1;97mtoujours    \033[1;91m[\033[1;93m**\033[1;91m]")
  raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")  
    
def playliste():    
    print(logo4)
    Street("\033[1;93mEntrer le lien de la video playliste pour telecharger.\n")
    playlist_url = raw_input("\033[1;97m╚═\033[1;31m▶[38;5;245m Mr [38;5;221mFaxel \033[1;31m▶▶▶ \033[1;33m")
    print("\033[1;97m")
    os.system("youtube-dl -cit --extract-audio --audio-format mp3 " + playlist_url)
    Street ("\n\033[1;91m[\033[1;93m**\033[1;91m] \033[38;5;214mFaxel\033[1;97m un jour, \033[38;5;214mFaxel \033[1;97mtoujours    \033[1;91m[\033[1;93m**\033[1;91m]")
    raw_input("\n\033[1;91m[\033[38;5;245m Retour\033[1;91m]")

menu()
